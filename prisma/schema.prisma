generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  email     String    @unique
  username  String?
  password  String
  Account   Account[]
  Session   Session[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Float     @default(0.0)
  image       String?
  description String?
  brief       String?
  tags        String[]
  user        User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String?   @db.ObjectId
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?   @db.ObjectId
}

model Category {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String?
  Product Product[]
}

model Image {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  image     String
  folder    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  quantity Int
}

model Order {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  shipment  Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
